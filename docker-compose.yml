version: '3'

networks: # задаем сеть
  network:

services:

  app:
    container_name: app
    build: 
      context: ./app
      dockerfile: Dockerfile
    image: php-laravel-7.0
    working_dir: /var/www
    ports:
      - "8000:8000"
    volumes: 
      - ./:/var/www
    networks: 
      - network

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile # used nginx:alphine
    volumes:
    - ./:/var/www
    environment:
      - "DB_PORT=${DB_PORT}"
      - "DB_HOST=${DB_HOST}"
    ports:
      - "8080:80"
    networks:
      - network

  postgres:
    build:
      context: ./docker/pgsql
      dockerfile: Dockerfile
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
    - "5432:5432"
    networks:
      - network

  php:
    build: 
      context: ./docker/php
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    volumes:
      - .:/var/www/

  redis:
    image: redis:latest
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"] # устанавливаем пароль для Redis
    volumes: # задаём том для redis
      - redis_data:/data
    networks:
      - network

  redis-ui:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"  
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - network

  rabbitmq:
    image: rabbitmq:management 
    ports:
      - "15672:15672"  # проброс порта UI RabbitMQ
      - "5672:5672"  # проброс порта для обмена сообщениями
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASSWORD} # устанавливаем пароль для RabbitMQ
    networks:
      - network

volumes:
  database:
  redis_data: